{"ast":null,"code":"\"use strict\";\n\nfunction e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e : {\n    default: e\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar t = e(require(\"react\")),\n    r = e => \"checkbox\" === e.type,\n    s = e => e instanceof Date,\n    a = e => null == e;\n\nconst n = e => \"object\" == typeof e;\n\nvar i = e => !a(e) && !Array.isArray(e) && n(e) && !s(e),\n    o = e => i(e) && e.target ? r(e.target) ? e.target.checked : e.target.value : e,\n    u = (e, t) => [...e].some(e => (e => e.substring(0, e.search(/.\\d/)) || e)(t) === e),\n    l = e => e.filter(Boolean),\n    c = e => void 0 === e,\n    d = (e, t, r) => {\n  if (!t || !i(e)) return r;\n  const s = l(t.split(/[,[\\].]+?/)).reduce((e, t) => a(e) ? e : e[t], e);\n  return c(s) || s === e ? c(e[t]) ? r : e[t] : s;\n};\n\nconst f = \"blur\",\n      m = \"focusout\",\n      g = \"change\",\n      y = \"onBlur\",\n      b = \"onChange\",\n      h = \"onSubmit\",\n      p = \"onTouched\",\n      _ = \"all\",\n      v = \"max\",\n      x = \"min\",\n      A = \"maxLength\",\n      F = \"minLength\",\n      j = \"pattern\",\n      V = \"required\",\n      O = \"validate\";\n\nvar S = (e, t) => {\n  const r = Object.assign({}, e);\n  return delete r[t], r;\n};\n\nconst w = t.default.createContext(null),\n      k = () => t.default.useContext(w);\n\nvar D = (e, t, r, s = !0) => {\n  const a = {};\n\n  for (const n in e) Object.defineProperty(a, n, {\n    get: () => {\n      const a = n;\n      return t[a] !== _ && (t[a] = !s || _), r && (r[a] = !0), e[a];\n    }\n  });\n\n  return a;\n},\n    C = e => i(e) && !Object.keys(e).length,\n    E = (e, t, r) => {\n  const s = S(e, \"name\");\n  return C(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find(e => t[e] === (!r || _));\n},\n    U = e => Array.isArray(e) ? e : [e],\n    B = (e, t, r) => r && t ? e === t : !e || !t || e === t || U(e).some(e => e && (e.startsWith(t) || t.startsWith(e)));\n\nfunction N(e) {\n  const r = t.default.useRef(e);\n  r.current = e, t.default.useEffect(() => {\n    const t = !e.disabled && r.current.subject.subscribe({\n      next: r.current.callback\n    });\n    return () => (e => {\n      e && e.unsubscribe();\n    })(t);\n  }, [e.disabled]);\n}\n\nfunction T(e) {\n  const r = k(),\n        {\n    control: s = r.control,\n    disabled: a,\n    name: n,\n    exact: i\n  } = e || {},\n        [o, u] = t.default.useState(s._formState),\n        l = t.default.useRef({\n    isDirty: !1,\n    dirtyFields: !1,\n    touchedFields: !1,\n    isValidating: !1,\n    isValid: !1,\n    errors: !1\n  }),\n        c = t.default.useRef(n),\n        d = t.default.useRef(!0);\n  c.current = n;\n  return N({\n    disabled: a,\n    callback: t.default.useCallback(e => d.current && B(c.current, e.name, i) && E(e, l.current) && u(Object.assign(Object.assign({}, s._formState), e)), [s, i]),\n    subject: s._subjects.state\n  }), t.default.useEffect(() => () => {\n    d.current = !1;\n  }, []), D(o, s._proxyFormState, l.current, !1);\n}\n\nvar M = e => \"string\" == typeof e,\n    L = (e, t, r, s) => {\n  const a = Array.isArray(e);\n  return M(e) ? (s && t.watch.add(e), d(r, e)) : a ? e.map(e => (s && t.watch.add(e), d(r, e))) : (s && (t.watchAll = !0), r);\n},\n    R = e => \"function\" == typeof e,\n    q = e => {\n  for (const t in e) if (R(e[t])) return !0;\n\n  return !1;\n};\n\nfunction W(e) {\n  const r = k(),\n        {\n    control: s = r.control,\n    name: a,\n    defaultValue: n,\n    disabled: o,\n    exact: u\n  } = e || {},\n        l = t.default.useRef(a);\n  l.current = a;\n  const d = t.default.useCallback(e => {\n    if (B(l.current, e.name, u)) {\n      const t = L(l.current, s._names, e.values || s._formValues);\n      m(c(l.current) || i(t) && !q(t) ? Object.assign({}, t) : Array.isArray(t) ? [...t] : c(t) ? n : t);\n    }\n  }, [s, u, n]);\n  N({\n    disabled: o,\n    subject: s._subjects.watch,\n    callback: d\n  });\n  const [f, m] = t.default.useState(c(n) ? s._getWatch(a) : n);\n  return t.default.useEffect(() => {\n    s._removeUnmounted();\n  }), f;\n}\n\nfunction I(e) {\n  const r = k(),\n        {\n    name: s,\n    control: a = r.control,\n    shouldUnregister: n\n  } = e,\n        i = u(a._names.array, s),\n        l = W({\n    control: a,\n    name: s,\n    defaultValue: d(a._formValues, s, d(a._defaultValues, s, e.defaultValue)),\n    exact: !0\n  }),\n        c = T({\n    control: a,\n    name: s\n  }),\n        m = t.default.useRef(a.register(s, Object.assign(Object.assign({}, e.rules), {\n    value: l\n  })));\n  return t.default.useEffect(() => {\n    const e = (e, t) => {\n      const r = d(a._fields, e);\n      r && (r._f.mount = t);\n    };\n\n    return e(s, !0), () => {\n      const t = a._options.shouldUnregister || n;\n      (i ? t && !a._stateFlags.action : t) ? a.unregister(s) : e(s, !1);\n    };\n  }, [s, a, i, n]), {\n    field: {\n      name: s,\n      value: l,\n      onChange: t.default.useCallback(e => {\n        m.current.onChange({\n          target: {\n            value: o(e),\n            name: s\n          },\n          type: g\n        });\n      }, [s]),\n      onBlur: t.default.useCallback(() => {\n        m.current.onBlur({\n          target: {\n            value: d(a._formValues, s),\n            name: s\n          },\n          type: f\n        });\n      }, [s, a]),\n      ref: t.default.useCallback(e => {\n        const t = d(a._fields, s);\n        e && t && e.focus && (t._f.ref = {\n          focus: () => e.focus(),\n          setCustomValidity: t => e.setCustomValidity(t),\n          reportValidity: () => e.reportValidity()\n        });\n      }, [s, a._fields])\n    },\n    formState: c,\n    fieldState: a.getFieldState(s, c)\n  };\n}\n\nvar P = (e, t, r, s, a) => t ? Object.assign(Object.assign({}, r[e]), {\n  types: Object.assign(Object.assign({}, r[e] && r[e].types ? r[e].types : {}), {\n    [s]: a || !0\n  })\n}) : {},\n    $ = e => /^\\w*$/.test(e),\n    H = e => l(e.replace(/[\"|']|\\]/g, \"\").split(/\\.|\\[/));\n\nfunction z(e, t, r) {\n  let s = -1;\n  const a = $(t) ? [t] : H(t),\n        n = a.length,\n        o = n - 1;\n\n  for (; ++s < n;) {\n    const t = a[s];\n    let n = r;\n\n    if (s !== o) {\n      const r = e[t];\n      n = i(r) || Array.isArray(r) ? r : isNaN(+a[s + 1]) ? {} : [];\n    }\n\n    e[t] = n, e = e[t];\n  }\n\n  return e;\n}\n\nconst G = (e, t, r) => {\n  for (const s of r || Object.keys(e)) {\n    const r = d(e, s);\n\n    if (r) {\n      const e = r._f,\n            s = S(r, \"_f\");\n\n      if (e && t(e.name)) {\n        if (e.ref.focus && c(e.ref.focus())) break;\n\n        if (e.refs) {\n          e.refs[0].focus();\n          break;\n        }\n      } else i(s) && G(s, t);\n    }\n  }\n};\n\nvar J = () => {\n  const e = \"undefined\" == typeof performance ? Date.now() : 1e3 * performance.now();\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, t => {\n    const r = (16 * Math.random() + e) % 16 | 0;\n    return (\"x\" == t ? r : 3 & r | 8).toString(16);\n  });\n},\n    K = (e, t, r = {}) => r.shouldFocus || c(r.shouldFocus) ? r.focusName || `${e}.${c(r.focusIndex) ? t : r.focusIndex}.` : \"\",\n    Q = (e, t, r) => !r && (t.watchAll || t.watch.has(e) || [...t.watch].some(t => e.startsWith(t) && /^\\.\\w+/.test(e.slice(t.length))));\n\nfunction X(e, t) {\n  return [...e, ...U(t)];\n}\n\nfunction Y(e) {\n  let t;\n  const r = Array.isArray(e);\n  if (e instanceof Date) t = new Date(e);else if (e instanceof Set) t = new Set(e);else {\n    if (!r && !i(e)) return e;\n    t = r ? [] : {};\n\n    for (const r in e) {\n      if (R(e[r])) {\n        t = e;\n        break;\n      }\n\n      t[r] = Y(e[r]);\n    }\n  }\n  return t;\n}\n\nvar Z = e => Array.isArray(e) ? e.map(() => {}) : void 0;\n\nfunction ee(e, t, r) {\n  return [...e.slice(0, t), ...U(r), ...e.slice(t)];\n}\n\nvar te = (e, t, r) => Array.isArray(e) ? (c(e[r]) && (e[r] = void 0), e.splice(r, 0, e.splice(t, 1)[0]), e) : [];\n\nfunction re(e, t) {\n  return [...U(t), ...U(e)];\n}\n\nvar se = (e, t) => c(t) ? [] : function (e, t) {\n  let r = 0;\n  const s = [...e];\n\n  for (const e of t) s.splice(e - r, 1), r++;\n\n  return l(s).length ? s : [];\n}(e, U(t).sort((e, t) => e - t)),\n    ae = (e, t, r) => {\n  e[t] = [e[r], e[r] = e[t]][0];\n},\n    ne = (e, t, r) => (e[t] = r, e);\n\nfunction ie() {\n  let e = [];\n  return {\n    get observers() {\n      return e;\n    },\n\n    next: t => {\n      for (const r of e) r.next(t);\n    },\n    subscribe: t => (e.push(t), {\n      unsubscribe: () => {\n        e = e.filter(e => e !== t);\n      }\n    }),\n    unsubscribe: () => {\n      e = [];\n    }\n  };\n}\n\nvar oe = e => a(e) || !n(e);\n\nfunction ue(e, t) {\n  if (oe(e) || oe(t)) return e === t;\n  if (s(e) && s(t)) return e.getTime() === t.getTime();\n  const r = Object.keys(e),\n        a = Object.keys(t);\n  if (r.length !== a.length) return !1;\n\n  for (const n of r) {\n    const r = e[n];\n    if (!a.includes(n)) return !1;\n\n    if (\"ref\" !== n) {\n      const e = t[n];\n      if (s(r) && s(e) || i(r) && i(e) || Array.isArray(r) && Array.isArray(e) ? !ue(r, e) : r !== e) return !1;\n    }\n  }\n\n  return !0;\n}\n\nvar le = e => ({\n  isOnSubmit: !e || e === h,\n  isOnBlur: e === y,\n  isOnChange: e === b,\n  isOnAll: e === _,\n  isOnTouch: e === p\n}),\n    ce = e => \"boolean\" == typeof e,\n    de = e => \"file\" === e.type,\n    fe = e => e instanceof HTMLElement,\n    me = e => \"select-multiple\" === e.type,\n    ge = e => \"radio\" === e.type,\n    ye = \"undefined\" != typeof window && void 0 !== window.HTMLElement && \"undefined\" != typeof document,\n    be = e => fe(e) && e.isConnected;\n\nfunction he(e, t) {\n  const r = $(t) ? [t] : H(t),\n        s = 1 == r.length ? e : function (e, t) {\n    const r = t.slice(0, -1).length;\n    let s = 0;\n\n    for (; s < r;) e = c(e) ? s++ : e[t[s++]];\n\n    return e;\n  }(e, r),\n        a = r[r.length - 1];\n  let n;\n  s && delete s[a];\n\n  for (let t = 0; t < r.slice(0, -1).length; t++) {\n    let s,\n        a = -1;\n    const o = r.slice(0, -(t + 1)),\n          u = o.length - 1;\n\n    for (t > 0 && (n = e); ++a < o.length;) {\n      const t = o[a];\n      s = s ? s[t] : e[t], u === a && (i(s) && C(s) || Array.isArray(s) && !s.filter(e => i(e) && !C(e) || ce(e) || Array.isArray(e) && e.length).length) && (n ? delete n[t] : delete e[t]), n = s;\n    }\n  }\n\n  return e;\n}\n\nfunction pe(e, t = {}) {\n  const r = Array.isArray(e);\n  if (i(e) || r) for (const r in e) Array.isArray(e[r]) || i(e[r]) && !q(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, pe(e[r], t[r])) : a(e[r]) || (t[r] = !0);\n  return t;\n}\n\nvar _e = (e, t) => function e(t, r, s) {\n  const n = Array.isArray(t);\n  if (i(t) || n) for (const n in t) Array.isArray(t[n]) || i(t[n]) && !q(t[n]) ? c(r) || oe(s[n]) ? s[n] = Array.isArray(t[n]) ? pe(t[n], []) : Object.assign({}, pe(t[n])) : e(t[n], a(r) ? {} : r[n], s[n]) : s[n] = !ue(t[n], r[n]);\n  return s;\n}(e, t, pe(t));\n\nconst ve = {\n  value: !1,\n  isValid: !1\n},\n      xe = {\n  value: !0,\n  isValid: !0\n};\n\nvar Ae = e => {\n  if (Array.isArray(e)) {\n    if (e.length > 1) {\n      const t = e.filter(e => e && e.checked && !e.disabled).map(e => e.value);\n      return {\n        value: t,\n        isValid: !!t.length\n      };\n    }\n\n    return e[0].checked && !e[0].disabled ? e[0].attributes && !c(e[0].attributes.value) ? c(e[0].value) || \"\" === e[0].value ? xe : {\n      value: e[0].value,\n      isValid: !0\n    } : xe : ve;\n  }\n\n  return ve;\n},\n    Fe = (e, {\n  valueAsNumber: t,\n  valueAsDate: r,\n  setValueAs: s\n}) => c(e) ? e : t ? \"\" === e ? NaN : +e : r && M(e) ? new Date(e) : s ? s(e) : e;\n\nconst je = {\n  isValid: !1,\n  value: null\n};\n\nvar Ve = e => Array.isArray(e) ? e.reduce((e, t) => t && t.checked && !t.disabled ? {\n  isValid: !0,\n  value: t.value\n} : e, je) : je;\n\nfunction Oe(e) {\n  const t = e.ref;\n  if (!(e.refs ? e.refs.every(e => e.disabled) : t.disabled)) return de(t) ? t.files : ge(t) ? Ve(e.refs).value : me(t) ? [...t.selectedOptions].map(({\n    value: e\n  }) => e) : r(t) ? Ae(e.refs).value : Fe(c(t.value) ? e.ref.value : t.value, e);\n}\n\nvar Se = e => e instanceof RegExp,\n    we = e => c(e) ? void 0 : Se(e) ? e.source : i(e) ? Se(e.value) ? e.value.source : e.value : e;\n\nfunction ke(e, t, r) {\n  const s = d(e, r);\n  if (s || $(r)) return {\n    error: s,\n    name: r\n  };\n  const a = r.split(\".\");\n\n  for (; a.length;) {\n    const s = a.join(\".\"),\n          n = d(t, s),\n          i = d(e, s);\n    if (n && !Array.isArray(n) && r !== s) return {\n      name: r\n    };\n    if (i && i.type) return {\n      name: s,\n      error: i\n    };\n    a.pop();\n  }\n\n  return {\n    name: r\n  };\n}\n\nvar De = e => M(e) || t.default.isValidElement(e);\n\nfunction Ce(e, t, r = \"validate\") {\n  if (De(e) || Array.isArray(e) && e.every(De) || ce(e) && !e) return {\n    type: r,\n    message: De(e) ? e : \"\",\n    ref: t\n  };\n}\n\nvar Ee = e => i(e) && !Se(e) ? e : {\n  value: e,\n  message: \"\"\n},\n    Ue = async (e, t, s, n) => {\n  const {\n    ref: o,\n    refs: u,\n    required: l,\n    maxLength: c,\n    minLength: d,\n    min: f,\n    max: m,\n    pattern: g,\n    validate: y,\n    name: b,\n    valueAsNumber: h,\n    mount: p,\n    disabled: _\n  } = e._f;\n  if (!p || _) return {};\n\n  const S = u ? u[0] : o,\n        w = e => {\n    n && S.reportValidity && (S.setCustomValidity(ce(e) ? \"\" : e || \" \"), S.reportValidity());\n  },\n        k = {},\n        D = ge(o),\n        E = r(o),\n        U = D || E,\n        B = (h || de(o)) && !o.value || \"\" === t || Array.isArray(t) && !t.length,\n        N = P.bind(null, b, s, k),\n        T = (e, t, r, s = A, a = F) => {\n    const n = e ? t : r;\n    k[b] = Object.assign({\n      type: e ? s : a,\n      message: n,\n      ref: o\n    }, N(e ? s : a, n));\n  };\n\n  if (l && (!U && (B || a(t)) || ce(t) && !t || E && !Ae(u).isValid || D && !Ve(u).isValid)) {\n    const {\n      value: e,\n      message: t\n    } = De(l) ? {\n      value: !!l,\n      message: l\n    } : Ee(l);\n    if (e && (k[b] = Object.assign({\n      type: V,\n      message: t,\n      ref: S\n    }, N(V, t)), !s)) return w(t), k;\n  }\n\n  if (!(B || a(f) && a(m))) {\n    let e, r;\n    const n = Ee(m),\n          i = Ee(f);\n\n    if (isNaN(t)) {\n      const s = o.valueAsDate || new Date(t);\n      M(n.value) && (e = s > new Date(n.value)), M(i.value) && (r = s < new Date(i.value));\n    } else {\n      const s = o.valueAsNumber || +t;\n      a(n.value) || (e = s > n.value), a(i.value) || (r = s < i.value);\n    }\n\n    if ((e || r) && (T(!!e, n.message, i.message, v, x), !s)) return w(k[b].message), k;\n  }\n\n  if ((c || d) && !B && M(t)) {\n    const e = Ee(c),\n          r = Ee(d),\n          n = !a(e.value) && t.length > e.value,\n          i = !a(r.value) && t.length < r.value;\n    if ((n || i) && (T(n, e.message, r.message), !s)) return w(k[b].message), k;\n  }\n\n  if (g && !B && M(t)) {\n    const {\n      value: e,\n      message: r\n    } = Ee(g);\n    if (Se(e) && !t.match(e) && (k[b] = Object.assign({\n      type: j,\n      message: r,\n      ref: o\n    }, N(j, r)), !s)) return w(r), k;\n  }\n\n  if (y) if (R(y)) {\n    const e = Ce(await y(t), S);\n    if (e && (k[b] = Object.assign(Object.assign({}, e), N(O, e.message)), !s)) return w(e.message), k;\n  } else if (i(y)) {\n    let e = {};\n\n    for (const r in y) {\n      if (!C(e) && !s) break;\n      const a = Ce(await y[r](t), S, r);\n      a && (e = Object.assign(Object.assign({}, a), N(r, a.message)), w(a.message), s && (k[b] = e));\n    }\n\n    if (!C(e) && (k[b] = Object.assign({\n      ref: S\n    }, e), !s)) return k;\n  }\n  return w(!0), k;\n};\n\nconst Be = {\n  mode: h,\n  reValidateMode: b,\n  shouldFocusError: !0\n};\n\nfunction Ne(e = {}) {\n  let t,\n      n = Object.assign(Object.assign({}, Be), e),\n      i = {\n    isDirty: !1,\n    isValidating: !1,\n    dirtyFields: {},\n    isSubmitted: !1,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: !1,\n    isSubmitSuccessful: !1,\n    isValid: !1,\n    errors: {}\n  },\n      g = {},\n      y = n.defaultValues || {},\n      b = n.shouldUnregister ? {} : Y(y),\n      h = {\n    action: !1,\n    mount: !1,\n    watch: !1\n  },\n      p = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  },\n      v = 0,\n      x = {};\n\n  const A = {\n    isDirty: !1,\n    dirtyFields: !1,\n    touchedFields: !1,\n    isValidating: !1,\n    isValid: !1,\n    errors: !1\n  },\n        F = {\n    watch: ie(),\n    array: ie(),\n    state: ie()\n  },\n        j = le(n.mode),\n        V = le(n.reValidateMode),\n        O = n.criteriaMode === _,\n        w = async e => {\n    let t = !1;\n    return A.isValid && (t = n.resolver ? C((await N()).errors) : await T(g, !0), e || t === i.isValid || (i.isValid = t, F.state.next({\n      isValid: t\n    }))), t;\n  },\n        k = (e, t) => (z(i.errors, e, t), F.state.next({\n    errors: i.errors\n  })),\n        D = (e, t, r, s) => {\n    const a = d(g, e);\n\n    if (a) {\n      const n = d(b, e, c(r) ? d(y, e) : r);\n      c(n) || s && s.defaultChecked || t ? z(b, e, t ? n : Oe(a._f)) : I(e, n), h.mount && w();\n    }\n  },\n        E = (e, t, r, s, a) => {\n    let n = !1;\n    const o = {\n      name: e\n    },\n          u = d(i.touchedFields, e);\n\n    if (A.isDirty) {\n      const e = i.isDirty;\n      i.isDirty = o.isDirty = q(), n = e !== o.isDirty;\n    }\n\n    if (A.dirtyFields && (!r || s)) {\n      const r = d(i.dirtyFields, e);\n      ue(d(y, e), t) ? he(i.dirtyFields, e) : z(i.dirtyFields, e, !0), o.dirtyFields = i.dirtyFields, n = n || r !== d(i.dirtyFields, e);\n    }\n\n    return r && !u && (z(i.touchedFields, e, r), o.touchedFields = i.touchedFields, n = n || A.touchedFields && u !== r), n && a && F.state.next(o), n ? o : {};\n  },\n        B = async (r, s, a, n, o) => {\n    const u = d(i.errors, s),\n          l = A.isValid && i.isValid !== a;\n    var c, f;\n\n    if (e.delayError && n ? (t = t || (c = k, f = e.delayError, (...e) => {\n      clearTimeout(v), v = window.setTimeout(() => c(...e), f);\n    }), t(s, n)) : (clearTimeout(v), n ? z(i.errors, s, n) : he(i.errors, s)), ((n ? !ue(u, n) : u) || !C(o) || l) && !r) {\n      const e = Object.assign(Object.assign(Object.assign({}, o), l ? {\n        isValid: a\n      } : {}), {\n        errors: i.errors,\n        name: s\n      });\n      i = Object.assign(Object.assign({}, i), e), F.state.next(e);\n    }\n\n    x[s]--, A.isValidating && !Object.values(x).some(e => e) && (F.state.next({\n      isValidating: !1\n    }), x = {});\n  },\n        N = async e => n.resolver ? await n.resolver(Object.assign({}, b), n.context, ((e, t, r, s) => {\n    const a = {};\n\n    for (const r of e) {\n      const e = d(t, r);\n      e && z(a, r, e._f);\n    }\n\n    return {\n      criteriaMode: r,\n      names: [...e],\n      fields: a,\n      shouldUseNativeValidation: s\n    };\n  })(e || p.mount, g, n.criteriaMode, n.shouldUseNativeValidation)) : {},\n        T = async (e, t, r = {\n    valid: !0\n  }) => {\n    for (const s in e) {\n      const a = e[s];\n\n      if (a) {\n        const e = a._f,\n              s = S(a, \"_f\");\n\n        if (e) {\n          const s = await Ue(a, d(b, e.name), O, n.shouldUseNativeValidation);\n          if (s[e.name] && (r.valid = !1, t)) break;\n          t || (s[e.name] ? z(i.errors, e.name, s[e.name]) : he(i.errors, e.name));\n        }\n\n        s && (await T(s, t, r));\n      }\n    }\n\n    return r.valid;\n  },\n        q = (e, t) => (e && t && z(b, e, t), !ue(K(), y)),\n        W = (e, t, r) => {\n    const s = Object.assign({}, h.mount ? b : c(t) ? y : M(e) ? {\n      [e]: t\n    } : t);\n    return L(e, p, s, r);\n  },\n        I = (e, t, s = {}) => {\n    const n = d(g, e);\n    let i = t;\n\n    if (n) {\n      const s = n._f;\n      s && (!s.disabled && z(b, e, Fe(t, s)), i = ye && fe(s.ref) && a(t) ? \"\" : t, me(s.ref) ? [...s.ref.options].forEach(e => e.selected = i.includes(e.value)) : s.refs ? r(s.ref) ? s.refs.length > 1 ? s.refs.forEach(e => e.checked = Array.isArray(i) ? !!i.find(t => t === e.value) : i === e.value) : s.refs[0] && (s.refs[0].checked = !!i) : s.refs.forEach(e => e.checked = e.value === i) : de(s.ref) ? s.ref.value = \"\" : (s.ref.value = i, s.ref.type || F.watch.next({\n        name: e\n      })));\n    }\n\n    (s.shouldDirty || s.shouldTouch) && E(e, i, s.shouldTouch, s.shouldDirty, !0), s.shouldValidate && J(e);\n  },\n        P = (e, t, r) => {\n    for (const a in t) {\n      const n = t[a],\n            i = `${e}.${a}`,\n            o = d(g, i);\n      !p.array.has(e) && oe(n) && (!o || o._f) || s(n) ? I(i, n, r) : P(i, n, r);\n    }\n  },\n        $ = (e, t, r = {}) => {\n    const s = d(g, e),\n          n = p.array.has(e),\n          o = Y(t);\n    z(b, e, o), n ? (F.array.next({\n      name: e,\n      values: b\n    }), (A.isDirty || A.dirtyFields) && r.shouldDirty && (i.dirtyFields = _e(y, b), F.state.next({\n      name: e,\n      dirtyFields: i.dirtyFields,\n      isDirty: q(e, o)\n    }))) : !s || s._f || a(o) ? I(e, o, r) : P(e, o, r), Q(e, p) && F.state.next({}), F.watch.next({\n      name: e\n    });\n  },\n        H = async e => {\n    const t = e.target;\n    let r = t.name;\n    const s = d(g, r);\n\n    if (s) {\n      let u, l;\n\n      const c = t.type ? Oe(s._f) : o(e),\n            y = e.type === f || e.type === m,\n            h = !((a = s._f).mount && (a.required || a.min || a.max || a.maxLength || a.minLength || a.pattern || a.validate) || n.resolver || d(i.errors, r) || s._f.deps) || ((e, t, r, s, a) => !a.isOnAll && (!r && a.isOnTouch ? !(t || e) : (r ? s.isOnBlur : a.isOnBlur) ? !e : !(r ? s.isOnChange : a.isOnChange) || e))(y, d(i.touchedFields, r), i.isSubmitted, V, j),\n            _ = Q(r, p, y);\n\n      z(b, r, c), y ? s._f.onBlur && s._f.onBlur(e) : s._f.onChange && s._f.onChange(e);\n      const v = E(r, c, y, !1),\n            A = !C(v) || _;\n      if (!y && F.watch.next({\n        name: r,\n        type: e.type\n      }), h) return A && F.state.next(Object.assign({\n        name: r\n      }, _ ? {} : v));\n\n      if (!y && _ && F.state.next({}), x[r] = (x[r], 1), F.state.next({\n        isValidating: !0\n      }), n.resolver) {\n        const {\n          errors: e\n        } = await N([r]),\n              t = ke(i.errors, g, r),\n              s = ke(e, g, t.name || r);\n        u = s.error, r = s.name, l = C(e);\n      } else u = (await Ue(s, d(b, r), O, n.shouldUseNativeValidation))[r], l = await w(!0);\n\n      s._f.deps && J(s._f.deps), B(!1, r, l, u, v);\n    }\n\n    var a;\n  },\n        J = async (e, t = {}) => {\n    let r, s;\n    const a = U(e);\n\n    if (F.state.next({\n      isValidating: !0\n    }), n.resolver) {\n      const t = await (async e => {\n        const {\n          errors: t\n        } = await N();\n        if (e) for (const r of e) {\n          const e = d(t, r);\n          e ? z(i.errors, r, e) : he(i.errors, r);\n        } else i.errors = t;\n        return t;\n      })(c(e) ? e : a);\n      r = C(t), s = e ? !a.some(e => d(t, e)) : r;\n    } else e ? (s = (await Promise.all(a.map(async e => {\n      const t = d(g, e);\n      return await T(t && t._f ? {\n        [e]: t\n      } : t);\n    }))).every(Boolean), (s || i.isValid) && w()) : s = r = await T(g);\n\n    return F.state.next(Object.assign(Object.assign(Object.assign({}, !M(e) || A.isValid && r !== i.isValid ? {} : {\n      name: e\n    }), n.resolver ? {\n      isValid: r\n    } : {}), {\n      errors: i.errors,\n      isValidating: !1\n    })), t.shouldFocus && !s && G(g, e => d(i.errors, e), e ? a : p.mount), s;\n  },\n        K = e => {\n    const t = Object.assign(Object.assign({}, y), h.mount ? b : {});\n    return c(e) ? t : M(e) ? d(t, e) : e.map(e => d(t, e));\n  },\n        X = (e, t) => ({\n    invalid: !!d((t || i).errors, e),\n    isDirty: !!d((t || i).dirtyFields, e),\n    isTouched: !!d((t || i).touchedFields, e),\n    error: d((t || i).errors, e)\n  }),\n        Z = (e, t = {}) => {\n    for (const r of e ? U(e) : p.mount) p.mount.delete(r), p.array.delete(r), d(g, r) && (t.keepValue || (he(g, r), he(b, r)), !t.keepError && he(i.errors, r), !t.keepDirty && he(i.dirtyFields, r), !t.keepTouched && he(i.touchedFields, r), !n.shouldUnregister && !t.keepDefaultValue && he(y, r));\n\n    F.watch.next({}), F.state.next(Object.assign(Object.assign({}, i), t.keepDirty ? {\n      isDirty: q()\n    } : {})), !t.keepIsValid && w();\n  },\n        ee = (e, t = {}) => {\n    let s = d(g, e);\n    const a = ce(t.disabled);\n    return z(g, e, {\n      _f: Object.assign(Object.assign(Object.assign({}, s && s._f ? s._f : {\n        ref: {\n          name: e\n        }\n      }), {\n        name: e,\n        mount: !0\n      }), t)\n    }), p.mount.add(e), s ? a && z(b, e, t.disabled ? void 0 : d(b, e, Oe(s._f))) : D(e, !0, t.value), Object.assign(Object.assign(Object.assign({}, a ? {\n      disabled: t.disabled\n    } : {}), n.shouldUseNativeValidation ? {\n      required: !!t.required,\n      min: we(t.min),\n      max: we(t.max),\n      minLength: we(t.minLength),\n      maxLength: we(t.maxLength),\n      pattern: we(t.pattern)\n    } : {}), {\n      name: e,\n      onChange: H,\n      onBlur: H,\n      ref: a => {\n        if (a) {\n          ee(e, t), s = d(g, e);\n\n          const n = c(a.value) && a.querySelectorAll && a.querySelectorAll(\"input,select,textarea\")[0] || a,\n                i = (e => ge(e) || r(e))(n),\n                o = s._f.refs || [];\n\n          if (i ? o.find(e => e === n) : n === s._f.ref) return;\n          z(g, e, {\n            _f: Object.assign(Object.assign({}, s._f), i ? {\n              refs: o.concat(n).filter(be),\n              ref: {\n                type: n.type,\n                name: e\n              }\n            } : {\n              ref: n\n            })\n          }), D(e, !1, void 0, n);\n        } else s = d(g, e, {}), s._f && (s._f.mount = !1), (n.shouldUnregister || t.shouldUnregister) && (!u(p.array, e) || !h.action) && p.unMount.add(e);\n      }\n    });\n  };\n\n  return {\n    control: {\n      register: ee,\n      unregister: Z,\n      getFieldState: X,\n      _executeSchema: N,\n      _getWatch: W,\n      _getDirty: q,\n      _updateValid: w,\n      _removeUnmounted: () => {\n        for (const e of p.unMount) {\n          const t = d(g, e);\n          t && (t._f.refs ? t._f.refs.every(e => !be(e)) : !be(t._f.ref)) && Z(e);\n        }\n\n        p.unMount = new Set();\n      },\n      _updateFieldArray: (e, t = [], r, s, a = !0, n = !0) => {\n        if (s && r) {\n          if (h.action = !0, n && Array.isArray(d(g, e))) {\n            const t = r(d(g, e), s.argA, s.argB);\n            a && z(g, e, t);\n          }\n\n          if (A.errors && n && Array.isArray(d(i.errors, e))) {\n            const t = r(d(i.errors, e), s.argA, s.argB);\n            a && z(i.errors, e, t), ((e, t) => {\n              !l(d(e, t)).length && he(e, t);\n            })(i.errors, e);\n          }\n\n          if (A.touchedFields && Array.isArray(d(i.touchedFields, e))) {\n            const t = r(d(i.touchedFields, e), s.argA, s.argB);\n            a && z(i.touchedFields, e, t);\n          }\n\n          A.dirtyFields && (i.dirtyFields = _e(y, b)), F.state.next({\n            isDirty: q(e, t),\n            dirtyFields: i.dirtyFields,\n            errors: i.errors,\n            isValid: i.isValid\n          });\n        } else z(b, e, t);\n      },\n      _getFieldArray: t => l(d(h.mount ? b : y, t, e.shouldUnregister ? d(y, t, []) : [])),\n      _subjects: F,\n      _proxyFormState: A,\n\n      get _fields() {\n        return g;\n      },\n\n      get _formValues() {\n        return b;\n      },\n\n      get _stateFlags() {\n        return h;\n      },\n\n      set _stateFlags(e) {\n        h = e;\n      },\n\n      get _defaultValues() {\n        return y;\n      },\n\n      get _names() {\n        return p;\n      },\n\n      set _names(e) {\n        p = e;\n      },\n\n      get _formState() {\n        return i;\n      },\n\n      set _formState(e) {\n        i = e;\n      },\n\n      get _options() {\n        return n;\n      },\n\n      set _options(e) {\n        n = Object.assign(Object.assign({}, n), e);\n      }\n\n    },\n    trigger: J,\n    register: ee,\n    handleSubmit: (e, t) => async r => {\n      r && (r.preventDefault && r.preventDefault(), r.persist && r.persist());\n      let s = !0,\n          a = Y(b);\n      F.state.next({\n        isSubmitting: !0\n      });\n\n      try {\n        if (n.resolver) {\n          const {\n            errors: e,\n            values: t\n          } = await N();\n          i.errors = e, a = t;\n        } else await T(g);\n\n        C(i.errors) && Object.keys(i.errors).every(e => d(a, e)) ? (F.state.next({\n          errors: {},\n          isSubmitting: !0\n        }), await e(a, r)) : (t && (await t(Object.assign({}, i.errors), r)), n.shouldFocusError && G(g, e => d(i.errors, e), p.mount));\n      } catch (e) {\n        throw s = !1, e;\n      } finally {\n        i.isSubmitted = !0, F.state.next({\n          isSubmitted: !0,\n          isSubmitting: !1,\n          isSubmitSuccessful: C(i.errors) && s,\n          submitCount: i.submitCount + 1,\n          errors: i.errors\n        });\n      }\n    },\n    watch: (e, t) => R(e) ? F.watch.subscribe({\n      next: r => e(W(void 0, t), r)\n    }) : W(e, t, !0),\n    setValue: $,\n    getValues: K,\n    reset: (t, r = {}) => {\n      const s = t || y,\n            a = Y(s),\n            n = t && !C(t) ? a : y;\n\n      if (r.keepDefaultValues || (y = s), !r.keepValues) {\n        if (ye && c(t)) for (const e of p.mount) {\n          const t = d(g, e);\n\n          if (t && t._f) {\n            const e = Array.isArray(t._f.refs) ? t._f.refs[0] : t._f.ref;\n\n            try {\n              fe(e) && e.closest(\"form\").reset();\n              break;\n            } catch (e) {}\n          }\n        }\n        b = e.shouldUnregister ? r.keepDefaultValues ? Y(y) : {} : a, g = {}, F.array.next({\n          values: n\n        }), F.watch.next({\n          values: n\n        });\n      }\n\n      p = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: !1,\n        focus: \"\"\n      }, h.mount = !A.isValid || !!r.keepIsValid, h.watch = !!e.shouldUnregister, F.state.next({\n        submitCount: r.keepSubmitCount ? i.submitCount : 0,\n        isDirty: r.keepDirty ? i.isDirty : !!r.keepDefaultValues && !ue(t, y),\n        isSubmitted: !!r.keepIsSubmitted && i.isSubmitted,\n        dirtyFields: r.keepDirty ? i.dirtyFields : r.keepDefaultValues && t ? Object.entries(t).reduce((e, [t, r]) => Object.assign(Object.assign({}, e), {\n          [t]: r !== d(y, t)\n        }), {}) : {},\n        touchedFields: r.keepTouched ? i.touchedFields : {},\n        errors: r.keepErrors ? i.errors : {},\n        isSubmitting: !1,\n        isSubmitSuccessful: !1\n      });\n    },\n    resetField: (e, t = {}) => {\n      d(g, e) && (c(t.defaultValue) ? $(e, d(y, e)) : ($(e, t.defaultValue), z(y, e, t.defaultValue)), t.keepTouched || he(i.touchedFields, e), t.keepDirty || (he(i.dirtyFields, e), i.isDirty = t.defaultValue ? q(e, d(y, e)) : q()), t.keepError || (he(i.errors, e), A.isValid && w()), F.state.next(Object.assign({}, i)));\n    },\n    clearErrors: e => {\n      e ? U(e).forEach(e => he(i.errors, e)) : i.errors = {}, F.state.next({\n        errors: i.errors\n      });\n    },\n    unregister: Z,\n    setError: (e, t, r) => {\n      const s = (d(g, e, {\n        _f: {}\n      })._f || {}).ref;\n      z(i.errors, e, Object.assign(Object.assign({}, t), {\n        ref: s\n      })), F.state.next({\n        name: e,\n        errors: i.errors,\n        isValid: !1\n      }), r && r.shouldFocus && s && s.focus && s.focus();\n    },\n    setFocus: (e, t = {}) => {\n      const r = d(g, e)._f,\n            s = r.refs ? r.refs[0] : r.ref;\n\n      t.shouldSelect ? s.select() : s.focus();\n    },\n    getFieldState: X\n  };\n}\n\nexports.Controller = e => e.render(I(e)), exports.FormProvider = e => t.default.createElement(w.Provider, {\n  value: S(e, \"children\")\n}, e.children), exports.appendErrors = P, exports.get = d, exports.set = z, exports.useController = I, exports.useFieldArray = function (e) {\n  const r = k(),\n        {\n    control: s = r.control,\n    name: a,\n    keyName: n = \"id\",\n    shouldUnregister: i\n  } = e,\n        [o, u] = t.default.useState(s._getFieldArray(a)),\n        l = t.default.useRef(s._getFieldArray(a).map(J)),\n        c = t.default.useRef(o),\n        f = t.default.useRef(a),\n        m = t.default.useRef(!1);\n  f.current = a, c.current = o, s._names.array.add(a), N({\n    callback: t.default.useCallback(({\n      values: e,\n      name: t\n    }) => {\n      if (t === f.current || !t) {\n        const t = d(e, f.current, []);\n        u(t), l.current = t.map(J);\n      }\n    }, []),\n    subject: s._subjects.array\n  });\n  const g = t.default.useCallback(e => {\n    m.current = !0, s._updateFieldArray(a, e);\n  }, [s, a]);\n  return t.default.useEffect(() => {\n    s._stateFlags.action = !1, Q(a, s._names) && s._subjects.state.next({}), m.current && s._executeSchema([a]).then(e => {\n      const t = d(e.errors, a);\n      t && t.type && !d(s._formState.errors, a) && (z(s._formState.errors, a, t), s._subjects.state.next({\n        errors: s._formState.errors\n      }));\n    }), s._subjects.watch.next({\n      name: a,\n      values: s._formValues\n    }), s._names.focus && G(s._fields, e => e.startsWith(s._names.focus)), s._names.focus = \"\", s._proxyFormState.isValid && s._updateValid();\n  }, [o, a, s]), t.default.useEffect(() => (!d(s._formValues, a) && s._updateFieldArray(a), () => {\n    (s._options.shouldUnregister || i) && s.unregister(a);\n  }), [a, s, n, i]), {\n    swap: t.default.useCallback((e, t) => {\n      const r = s._getFieldArray(a);\n\n      ae(r, e, t), ae(l.current, e, t), g(r), u(r), s._updateFieldArray(a, r, ae, {\n        argA: e,\n        argB: t\n      }, !1);\n    }, [g, a, s]),\n    move: t.default.useCallback((e, t) => {\n      const r = s._getFieldArray(a);\n\n      te(r, e, t), te(l.current, e, t), g(r), u(r), s._updateFieldArray(a, r, te, {\n        argA: e,\n        argB: t\n      }, !1);\n    }, [g, a, s]),\n    prepend: t.default.useCallback((e, t) => {\n      const r = U(Y(e)),\n            n = re(s._getFieldArray(a), r);\n      s._names.focus = K(a, 0, t), l.current = re(l.current, r.map(J)), g(n), u(n), s._updateFieldArray(a, n, re, {\n        argA: Z(e)\n      });\n    }, [g, a, s]),\n    append: t.default.useCallback((e, t) => {\n      const r = U(Y(e)),\n            n = X(s._getFieldArray(a), r);\n      s._names.focus = K(a, n.length - 1, t), l.current = X(l.current, r.map(J)), g(n), u(n), s._updateFieldArray(a, n, X, {\n        argA: Z(e)\n      });\n    }, [g, a, s]),\n    remove: t.default.useCallback(e => {\n      const t = se(s._getFieldArray(a), e);\n      l.current = se(l.current, e), g(t), u(t), s._updateFieldArray(a, t, se, {\n        argA: e\n      });\n    }, [g, a, s]),\n    insert: t.default.useCallback((e, t, r) => {\n      const n = U(Y(t)),\n            i = ee(s._getFieldArray(a), e, n);\n      s._names.focus = K(a, e, r), l.current = ee(l.current, e, n.map(J)), g(i), u(i), s._updateFieldArray(a, i, ee, {\n        argA: e,\n        argB: Z(t)\n      });\n    }, [g, a, s]),\n    update: t.default.useCallback((e, t) => {\n      const r = ne(s._getFieldArray(a), e, t);\n      l.current = [...r].map((t, r) => t && r !== e ? l.current[r] : J()), g(r), u([...r]), s._updateFieldArray(a, r, ne, {\n        argA: e,\n        argB: t\n      }, !0, !1);\n    }, [g, a, s]),\n    replace: t.default.useCallback(e => {\n      const t = U(Y(e));\n      l.current = t.map(J), g([...t]), u([...t]), s._updateFieldArray(a, [...t], e => e, {}, !0, !1);\n    }, [g, a, s]),\n    fields: t.default.useMemo(() => o.map((e, t) => Object.assign(Object.assign({}, e), {\n      [n]: l.current[t] || J()\n    })), [o, n])\n  };\n}, exports.useForm = function (e = {}) {\n  const r = t.default.useRef(),\n        [s, a] = t.default.useState({\n    isDirty: !1,\n    isValidating: !1,\n    dirtyFields: {},\n    isSubmitted: !1,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: !1,\n    isSubmitSuccessful: !1,\n    isValid: !1,\n    errors: {}\n  });\n  r.current ? r.current.control._options = e : r.current = Object.assign(Object.assign({}, Ne(e)), {\n    formState: s\n  });\n  const n = r.current.control,\n        i = t.default.useCallback(e => {\n    E(e, n._proxyFormState, !0) && (n._formState = Object.assign(Object.assign({}, n._formState), e), a(Object.assign({}, n._formState)));\n  }, [n]);\n  return N({\n    subject: n._subjects.state,\n    callback: i\n  }), t.default.useEffect(() => {\n    n._stateFlags.mount || (n._proxyFormState.isValid && n._updateValid(), n._stateFlags.mount = !0), n._stateFlags.watch && (n._stateFlags.watch = !1, n._subjects.state.next({})), n._removeUnmounted();\n  }), r.current.formState = D(s, n._proxyFormState), r.current;\n}, exports.useFormContext = k, exports.useFormState = T, exports.useWatch = W;","map":{"version":3,"sources":["../src/utils/isCheckBoxInput.ts","../src/utils/isDateObject.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isObject.ts","../src/logic/getEventValue.ts","../src/logic/isNameInFieldArray.ts","../src/logic/getNodeParentName.ts","../src/utils/compact.ts","../src/utils/isUndefined.ts","../src/utils/get.ts","../src/constants.ts","../src/utils/omit.ts","../src/useFormContext.tsx","../src/logic/getProxyFormState.ts","../src/utils/isEmptyObject.ts","../src/logic/shouldRenderFormState.ts","../src/utils/convertToArrayPayload.ts","../src/logic/shouldSubscribeByName.ts","../src/useSubscribe.ts","../src/useFormState.ts","../src/utils/isString.ts","../src/logic/generateWatchOutput.ts","../src/utils/isFunction.ts","../src/utils/objectHasFunction.ts","../src/useWatch.ts","../src/useController.ts","../src/logic/appendErrors.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/focusFieldBy.ts","../src/logic/generateId.ts","../src/logic/getFocusFieldName.ts","../src/logic/isWatched.ts","../src/utils/append.ts","../src/utils/cloneObject.ts","../src/utils/fillEmptyArray.ts","../src/utils/insert.ts","../src/utils/move.ts","../src/utils/prepend.ts","../src/utils/remove.ts","../src/utils/swap.ts","../src/utils/update.ts","../src/utils/createSubject.ts","../src/utils/isPrimitive.ts","../src/utils/deepEqual.ts","../src/utils/getValidationModes.ts","../src/utils/isBoolean.ts","../src/utils/isFileInput.ts","../src/utils/isHTMLElement.ts","../src/utils/isMultipleSelect.ts","../src/utils/isRadioInput.ts","../src/utils/isWeb.ts","../src/utils/live.ts","../src/utils/unset.ts","../src/logic/getDirtyFields.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValueAs.ts","../src/logic/getRadioValue.ts","../src/logic/getFieldValue.ts","../src/logic/getResolverOptions.ts","../src/utils/isRegex.ts","../src/logic/getRuleValue.ts","../src/logic/schemaErrorLookup.ts","../src/logic/skipValidation.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/getValueAndMessage.ts","../src/logic/validateField.ts","../src/logic/createFormControl.ts","../src/logic/hasValidation.ts","../src/utils/isRadioOrCheckbox.ts","../src/logic/unsetEmptyArray.ts","../src/controller.tsx","../src/useFieldArray.ts","../src/useForm.ts"],"names":["element","type","value","Date","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","names","name","some","current","getNodeParentName","substring","search","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","source","copy","HookFormContext","React","createContext","useFormContext","useContext","props","Provider","omit","children","formState","_proxyFormState","localProxyFormState","isRoot","Object","defineProperty","get","_key","keys","length","formStateData","isEmptyObject","find","signalName","exact","convertToArrayPayload","currentName","startsWith","useSubscribe","_props","useRef","useEffect","subscription","unsubscribe","disabled","subject","subscribe","next","callback","useFormState","methods","control","updateFormState","useState","_formState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","_name","_mounted","useCallback","shouldSubscribeByName","shouldRenderFormState","_subjects","state","getProxyFormState","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","data","isFunction","useWatch","fieldValues","generateWatchOutput","values","_formValues","updateValue","objectHasFunction","_getWatch","_removeUnmounted","useController","shouldUnregister","isArrayField","isNameInFieldArray","array","_defaultValues","_registerProps","register","rules","updateMounted","field","_fields","_f","mount","_shouldUnregisterField","_options","_stateFlags","action","unregister","onChange","getEventValue","onBlur","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","getFieldState","validateAllFieldCriteria","types","[object Object]","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","fieldsNames","refs","d","performance","now","c","r","Math","random","toString","options","shouldFocus","focusName","focusIndex","isBlurEvent","has","watchName","slice","append","cloneObject","Set","insert","from","to","splice","prepend","indexes","i","temp","removeAtIndexes","sort","a","b","indexA","indexB","createSubject","_observers","observer","push","o","observers","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","HTMLElement","window","document","isHTMLElement","isConnected","updatePath","unset","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isBoolean","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","defaultValues","defaultResult","validResult","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","previous","getFieldValue","every","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selectedOptions","isCheckBox","getCheckboxValue","getFieldValueAs","criteriaMode","shouldUseNativeValidation","RegExp","rule","isRegex","schemaErrorLookup","error","join","foundError","pop","isTouched","isSubmitted","reValidateMode","isValidElement","getValidateError","isMessage","validationData","async","inputValue","required","maxLength","minLength","min","max","pattern","validate","inputRef","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","valueDate","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","defaultOptions","shouldFocusError","createFormControl","submitCount","isSubmitting","isSubmitSuccessful","unMount","delayErrorCallback","timer","validateFields","validationModeBeforeSubmit","getValidationModes","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","wait","args","clearTimeout","setTimeout","_updateValid","shouldSkipRender","resolver","_executeSchema","executeBuildInValidation","method","shouldSetValues","shouldUpdateFieldsAndErrors","argA","argB","unsetEmptyArray","getDirtyFields","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","isFieldDirty","output","isPreviousFieldTouched","isPreviousFormDirty","isPreviousFieldDirty","shouldRenderByError","previousFieldError","shouldUpdateValid","delayError","updatedFormState","v","context","shouldOnlyCheckValid","valid","fieldReference","fieldError","validateField","live","getValues","isWeb","forEach","selectRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","isFieldArray","cloneValue","isWatched","shouldSkipValidation","deps","watched","previousErrorLookupResult","errorLookupResult","fieldNames","Promise","all","invalid","inputName","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","disabledIsDefined","getRuleValue","fieldRef","querySelectorAll","radioOrCheckbox","concat","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","closest","reset","keepSubmitCount","keepIsSubmitted","entries","keepErrors","shouldSelect","select","_updateFieldArray","_getFieldArray","handleSubmit","resetField","clearErrors","setError","setFocus","render","keyName","setFields","ids","generateId","_fieldIds","_actioned","fieldArrayName","updateValues","updatedFieldArrayValues","appendValue","appendAt","getFocusFieldName","fillEmptyArray","prependValue","prependAt","removeArrayAt","insertValue","insertAt","swapArrayAt","moveArrayAt","updateAt","then","swap","move","remove","update","useMemo","_formControl"],"mappings":"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","sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  [...names].some((current) => getNodeParentName(name) === current);\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\n","export default <TValue>(value: TValue[]) => value.filter(Boolean);\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","export default <Key extends string, T extends Record<Key, any>>(\n  source: T,\n  key: Key,\n): Omit<T, Key> => {\n  const copy = { ...source };\n  delete copy[key];\n\n  return copy;\n};\n","import React from 'react';\n\nimport omit from './utils/omit';\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => (\n  <HookFormContext.Provider\n    value={omit(props, 'children') as unknown as UseFormReturn}\n  >\n    {props.children}\n  </HookFormContext.Provider>\n);\n","import { VALIDATION_MODE } from '../constants';\nimport { FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues>(\n  formState: FormState<TFieldValues>,\n  _proxyFormState: ReadFormState,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {} as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (_proxyFormState[_key] !== VALIDATION_MODE.all) {\n          _proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const formState = omit(formStateData, 'name');\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject, Subscription } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const tearDown = (subscription: Subscription | false) => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n\n    const subscription =\n      !props.disabled &&\n      _props.current.subject.subscribe({\n        next: _props.current.callback,\n      });\n\n    return () => tearDown(subscription);\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n  const _mounted = React.useRef(true);\n\n  _name.current = name;\n\n  const callback = React.useCallback(\n    (value) =>\n      _mounted.current &&\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        value.name,\n        exact,\n      ) &&\n      shouldRenderFormState(value, _localProxyFormState.current) &&\n      updateFormState({\n        ...control._formState,\n        ...value,\n      }),\n    [control, exact],\n  );\n\n  useSubscribe({\n    disabled,\n    callback,\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(\n    () => () => {\n      _mounted.current = false;\n    },\n    [],\n  );\n\n  return getProxyFormState(\n    formState,\n    control._proxyFormState,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, InternalFieldName, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default (\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) => {\n  const isArray = Array.isArray(names);\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names as InternalFieldName);\n    return get(formValues, names as InternalFieldName);\n  }\n\n  if (isArray) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName as InternalFieldName),\n        get(formValues, fieldName as InternalFieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport isObject from './utils/isObject';\nimport isUndefined from './utils/isUndefined';\nimport objectHasFunction from './utils/objectHasFunction';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends FieldPath<TFieldValues>[] = FieldPath<TFieldValues>[],\n>(): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues>(props?: UseWatchProps<TFieldValues>) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  const callback = React.useCallback(\n    (formState) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        const fieldValues = generateWatchOutput(\n          _name.current as InternalFieldName | InternalFieldName[],\n          control._names,\n          formState.values || control._formValues,\n        );\n\n        updateValue(\n          isUndefined(_name.current) ||\n            (isObject(fieldValues) && !objectHasFunction(fieldValues))\n            ? { ...fieldValues }\n            : Array.isArray(fieldValues)\n            ? [...fieldValues]\n            : isUndefined(fieldValues)\n            ? defaultValue\n            : fieldValues,\n        );\n      }\n    },\n    [control, exact, defaultValue],\n  );\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback,\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => {\n    control._removeUnmounted();\n  });\n\n  return value;\n}\n","import React from 'react';\n\nimport getEventValue from './logic/getEventValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport {\n  Field,\n  FieldPath,\n  FieldPathValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport { useWatch } from './useWatch';\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: UseControllerProps<TFieldValues, TName>,\n): UseControllerReturn<TFieldValues, TName> {\n  const methods = useFormContext<TFieldValues>();\n  const { name, control = methods.control, shouldUnregister } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(\n      control._formValues,\n      name,\n      get(control._defaultValues, name, props.defaultValue),\n    ),\n    exact: true,\n  }) as UnpackNestedValue<FieldPathValue<TFieldValues, TName>>;\n  const formState = useFormState({\n    control,\n    name,\n  });\n\n  const _registerProps = React.useRef(\n    control.register(name, {\n      ...props.rules,\n      value,\n    }),\n  );\n\n  React.useEffect(() => {\n    const updateMounted = (name: InternalFieldName, value: boolean) => {\n      const field: Field = get(control._fields, name);\n\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n\n    updateMounted(name, true);\n\n    return () => {\n      const _shouldUnregisterField =\n        control._options.shouldUnregister || shouldUnregister;\n\n      (\n        isArrayField\n          ? _shouldUnregisterField && !control._stateFlags.action\n          : _shouldUnregisterField\n      )\n        ? control.unregister(name)\n        : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n\n  return {\n    field: {\n      name,\n      value,\n      onChange: React.useCallback(\n        (event) => {\n          _registerProps.current.onChange({\n            target: {\n              value: getEventValue(event),\n              name: name as InternalFieldName,\n            },\n            type: EVENTS.CHANGE,\n          });\n        },\n        [name],\n      ),\n      onBlur: React.useCallback(() => {\n        _registerProps.current.onBlur({\n          target: {\n            value: get(control._formValues, name),\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.BLUR,\n        });\n      }, [name, control]),\n      ref: React.useCallback(\n        (elm) => {\n          const field = get(control._fields, name);\n\n          if (elm && field && elm.focus) {\n            field._f.ref = {\n              focus: () => elm.focus(),\n              setCustomValidity: (message: string) =>\n                elm.setCustomValidity(message),\n              reportValidity: () => elm.reportValidity(),\n            };\n          }\n        },\n        [name, control._fields],\n      ),\n    },\n    formState,\n    fieldState: control.getFieldState(name, formState),\n  };\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  name: InternalFieldName,\n  index: number,\n  options: FieldArrayMethodProps = {},\n): string =>\n  options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n      `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function append<T>(data: T[], value: T | T[]): T[] {\n  return [...data, ...convertToArrayPayload(value)];\n}\n","import isFunction from './isFunction';\nimport isObject from './isObject';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (isArray || isObject(data)) {\n    copy = isArray ? [] : {};\n    for (const key in data) {\n      if (isFunction(data[key])) {\n        copy = data;\n        break;\n      }\n      copy[key] = cloneObject(data[key]);\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...convertToArrayPayload(value),\n    ...data.slice(index),\n  ];\n}\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n\n  return data;\n};\n","import convertToArrayPayload from './convertToArrayPayload';\n\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default <T>(fieldValues: T[], index: number, value: T) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) ||\n                isBoolean(data) ||\n                (Array.isArray(data) && data.length),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : +value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? undefined\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup(\n  errors: FieldErrors,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends NativeFieldValue>(\n  field: Field,\n  inputValue: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || +inputValue;\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  ResolverResult,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UnpackNestedValue,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport omit from '../utils/omit';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  };\n  let _fields = {};\n  let _defaultValues = _options.defaultValues || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  } as Names;\n  let delayErrorCallback: DelayCallback;\n  let timer = 0;\n  let validateFields: Record<InternalFieldName, number> = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T, wait: number) =>\n    (...args: any) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n    };\n\n  const _updateValid = async (shouldSkipRender?: boolean) => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuildInValidation(_fields, true);\n\n      if (!shouldSkipRender && isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndErrors = true,\n  ) => {\n    if (args && method) {\n      _stateFlags.action = true;\n      if (shouldUpdateFieldsAndErrors && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        _proxyFormState.errors &&\n        shouldUpdateFieldsAndErrors &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => (\n    set(_formState.errors, name, error),\n    _subjects.state.next({\n      errors: _formState.errors,\n    })\n  );\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let isFieldDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && (!isBlurEvent || shouldDirty)) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields as TFieldValues, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty =\n        isFieldDirty ||\n        isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isBlurEvent && !isPreviousFieldTouched) {\n      set(_formState.touchedFields as TFieldValues, name, isBlurEvent);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty =\n        isFieldDirty ||\n        (_proxyFormState.touchedFields &&\n          isPreviousFieldTouched !== isBlurEvent);\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n\n    return isFieldDirty ? output : {};\n  };\n\n  const shouldRenderByError = async (\n    shouldSkipRender: boolean,\n    name: InternalFieldName,\n    isValid: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ): Promise<void> => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback =\n        delayErrorCallback || debounce(updateErrors, props.delayError);\n      delayErrorCallback(name, error);\n    } else {\n      clearTimeout(timer);\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n        !isEmptyObject(fieldState) ||\n        shouldUpdateValid) &&\n      !shouldSkipRender\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (\n      _proxyFormState.isValidating &&\n      !Object.values(validateFields).some((v) => v)\n    ) {\n      _subjects.state.next({\n        isValidating: false,\n      });\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver\n      ? await _options.resolver(\n          { ..._formValues } as UnpackNestedValue<TFieldValues>,\n          _options.context,\n          getResolverOptions(\n            name || _names.mount,\n            _fields,\n            _options.criteriaMode,\n            _options.shouldUseNativeValidation,\n          ),\n        )\n      : ({} as ResolverResult<TFieldValues>);\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors as FieldErrors<TFieldValues>;\n    }\n\n    return errors;\n  };\n\n  const executeBuildInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const fieldReference = field._f;\n        const fieldValue = omit(field, '_f');\n\n        if (fieldReference) {\n          const fieldError = await validateField(\n            field,\n            get(_formValues, fieldReference.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          );\n\n          if (fieldError[fieldReference.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          if (!shouldOnlyCheckValid) {\n            fieldError[fieldReference.name]\n              ? set(\n                  _formState.errors,\n                  fieldReference.name,\n                  fieldError[fieldReference.name],\n                )\n              : unset(_formState.errors, fieldReference.name);\n          }\n        }\n\n        fieldValue &&\n          (await executeBuildInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) => {\n    const fieldValues = {\n      ...(_stateFlags.mount\n        ? _formValues\n        : isUndefined(defaultValue)\n        ? _defaultValues\n        : isString(names)\n        ? { [names]: defaultValue }\n        : defaultValue),\n    };\n\n    return generateWatchOutput(names, _names, fieldValues, isGlobal);\n  };\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _stateFlags.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (selectRef) =>\n              (selectRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(selectRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name,\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type\n        ? getFieldValue(field._f)\n        : getEventValue(event);\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n\n      validateFields[name] = validateFields[name] ? +1 : 1;\n\n      _subjects.state.next({\n        isValidating: true,\n      });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        isValid = await _updateValid(true);\n      }\n\n      field._f.deps && trigger(field._f.deps as FieldPath<TFieldValues>[]);\n\n      shouldRenderByError(false, name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _subjects.state.next({\n      isValidating: true,\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuildInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuildInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {} as FieldErrors<TFieldValues>);\n\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (info) =>\n            name(\n              _getWatch(\n                undefined,\n                defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n              ),\n              info as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: refs.concat(fieldRef).filter(live),\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors as FieldErrors<TFieldValues>;\n          fieldValues = values;\n        } else {\n          await executeBuildInValidation(_fields);\n        }\n\n        if (\n          isEmptyObject(_formState.errors) &&\n          Object.keys(_formState.errors).every((name) => get(fieldValues, name))\n        ) {\n          _subjects.state.next({\n            errors: {} as FieldErrors<TFieldValues>,\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          if (onInvalid) {\n            await onInvalid({ ..._formState.errors }, e);\n          }\n\n          _options.shouldFocusError &&\n            focusFieldBy(\n              _fields,\n              (key) => get(_formState.errors, key),\n              _names.mount,\n            );\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (isWeb && isUndefined(formValues)) {\n        for (const name of _names.mount) {\n          const field = get(_fields, name);\n          if (field && field._f) {\n            const fieldReference = Array.isArray(field._f.refs)\n              ? field._f.refs[0]\n              : field._f.ref;\n\n            try {\n              isHTMLElement(fieldReference) &&\n                fieldReference.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _fields = {};\n\n      _subjects.array.next({\n        values,\n      });\n\n      _subjects.watch.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? _formState.isDirty\n        : keepStateOptions.keepDefaultValues\n        ? !deepEqual(formValues, _defaultValues)\n        : false,\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirty\n        ? _formState.dirtyFields\n        : ((keepStateOptions.keepDefaultValues && formValues\n            ? Object.entries(formValues).reduce(\n                (previous, [key, value]) => ({\n                  ...previous,\n                  [key]: value !== get(_defaultValues, key),\n                }),\n                {},\n              )\n            : {}) as FieldNamesMarkedBoolean<TFieldValues>),\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : ({} as FieldNamesMarkedBoolean<TFieldValues>),\n      errors: keepStateOptions.keepErrors\n        ? _formState.errors\n        : ({} as FieldErrors<TFieldValues>),\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name)._f;\n    const fieldRef = field.refs ? field.refs[0] : field.ref;\n    options.shouldSelect ? fieldRef.select() : fieldRef.focus();\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport generateId from './logic/generateId';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport isWatched from './logic/isWatched';\nimport appendAt from './utils/append';\nimport cloneObject from './utils/cloneObject';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport updateAt from './utils/update';\nimport {\n  FieldArray,\n  FieldArrayMethodProps,\n  FieldArrayPath,\n  FieldArrayWithId,\n  FieldErrors,\n  FieldPath,\n  FieldValues,\n  UnpackNestedValue,\n  UseFieldArrayProps,\n  UseFieldArrayReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useFieldArray<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\n  TKeyName extends string = 'id',\n>(\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id' as TKeyName,\n    shouldUnregister,\n  } = props;\n  const [fields, setFields] = React.useState<\n    Partial<FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>>[]\n  >(control._getFieldArray(name));\n  const ids = React.useRef<string[]>(\n    control._getFieldArray(name).map(generateId),\n  );\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n\n  const callback = React.useCallback(({ values, name: fieldArrayName }) => {\n    if (fieldArrayName === _name.current || !fieldArrayName) {\n      const fieldValues = get(values, _name.current, []);\n      setFields(fieldValues);\n      ids.current = fieldValues.map(generateId);\n    }\n  }, []);\n\n  useSubscribe({\n    callback,\n    subject: control._subjects.array,\n  });\n\n  const updateValues = React.useCallback(\n    <\n      T extends Partial<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >[],\n    >(\n      updatedFieldArrayValues: T,\n    ) => {\n      _actioned.current = true;\n      control._updateFieldArray(name, updatedFieldArrayValues);\n    },\n    [control, name],\n  );\n\n  const append = (\n    value:\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = appendAt(\n      control._getFieldArray(name),\n      appendValue,\n    );\n    control._names.focus = getFocusFieldName(\n      name,\n      updatedFieldArrayValues.length - 1,\n      options,\n    );\n    ids.current = appendAt(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const prepend = (\n    value:\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prependAt(\n      control._getFieldArray(name),\n      prependValue,\n    );\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prependAt(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n      argA: fillEmptyArray(value),\n    });\n  };\n\n  const remove = (index?: number | number[]) => {\n    const updatedFieldArrayValues: Partial<\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n    >[] = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index,\n    });\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>[],\n    options?: FieldArrayMethodProps,\n  ) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insertAt(\n      control._getFieldArray(name),\n      index,\n      insertValue,\n    );\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insertAt(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insertAt, {\n      argA: index,\n      argB: fillEmptyArray(value),\n    });\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      false,\n    );\n  };\n\n  const update = (\n    index: number,\n    value: UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>,\n  ) => {\n    const updatedFieldArrayValues = updateAt(\n      control._getFieldArray<\n        FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\n      >(name),\n      index,\n      value as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>,\n    );\n    ids.current = [...updatedFieldArrayValues].map((item, i) =>\n      !item || i === index ? generateId() : ids.current[i],\n    );\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      updatedFieldArrayValues,\n      updateAt,\n      {\n        argA: index,\n        argB: value,\n      },\n      true,\n      false,\n    );\n  };\n\n  const replace = (\n    value:\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>\n      | Partial<UnpackNestedValue<FieldArray<TFieldValues, TFieldArrayName>>>[],\n  ) => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(\n      name,\n      [...updatedFieldArrayValues],\n      <T>(data: T): T => data,\n      {},\n      true,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    control._stateFlags.action = false;\n\n    isWatched(name, control._names) && control._subjects.state.next({});\n\n    if (_actioned.current) {\n      control._executeSchema([name]).then((result) => {\n        const error = get(result.errors, name);\n\n        if (error && error.type && !get(control._formState.errors, name)) {\n          set(control._formState.errors, name, error);\n          control._subjects.state.next({\n            errors: control._formState.errors as FieldErrors<TFieldValues>,\n          });\n        }\n      });\n    }\n\n    control._subjects.watch.next({\n      name,\n      values: control._formValues,\n    });\n\n    control._names.focus &&\n      focusFieldBy(control._fields, (key: string) =>\n        key.startsWith(control._names.focus),\n      );\n\n    control._names.focus = '';\n\n    control._proxyFormState.isValid && control._updateValid();\n  }, [fields, name, control]);\n\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) &&\n        control.unregister(name as FieldPath<TFieldValues>);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend, [updateValues, name, control]),\n    append: React.useCallback(append, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(\n      () =>\n        fields.map((field, index) => ({\n          ...field,\n          [keyName]: ids.current[index] || generateId(),\n        })) as FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>[],\n      [fields, keyName],\n    ),\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport {\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldValues,\n  FormState,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to mange the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  });\n\n  if (_formControl.current) {\n    _formControl.current.control._options = props;\n  } else {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n\n  const callback = React.useCallback(\n    (value) => {\n      if (shouldRenderFormState(value, control._proxyFormState, true)) {\n        control._formState = {\n          ...control._formState,\n          ...value,\n        };\n\n        updateFormState({ ...control._formState });\n      }\n    },\n    [control],\n  );\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback,\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n    control._removeUnmounted();\n  });\n\n  _formControl.current.formState = getProxyFormState(\n    formState,\n    control._proxyFormState,\n  );\n\n  return _formControl.current;\n}\n"]},"metadata":{},"sourceType":"script"}